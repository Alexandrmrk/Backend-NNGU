{"version":3,"sources":["../../src/controllers/AuthController.js"],"names":["AuthController","req","res","body","email","password","User","findOne","user","HttpError","authToken","Session","create","userId","id","token","session","json","status","_id","name","model","save","TryCatch"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IAEMA,c;;;;;;;;kGACJ,iBACoBC,GADpB,EACyBC,GADzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE8BD,GAAG,CAACE,IAFlC,EAEUC,KAFV,aAEUA,KAFV,EAEiBC,QAFjB,aAEiBA,QAFjB;AAAA;AAAA,uBAGqBC,iBAAKC,OAAL,CAAa;AAAEH,kBAAAA,KAAK,EAALA;AAAF,iBAAb,CAHrB;;AAAA;AAGQI,gBAAAA,IAHR;AAAA,8BAKM,CAACA,IALP;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAKuB,6BAAcH,QAAd,EAAwBG,IAAI,CAACH,QAA7B,CALvB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,sBAMU,IAAII,qBAAJ,CAAc,6BAAd,EAA6C,GAA7C,CANV;;AAAA;AASQC,gBAAAA,SATR,GASoB,eATpB;AAAA;AAAA,uBAUwBC,oBAAQC,MAAR,CAAe;AAAEC,kBAAAA,MAAM,EAAEL,IAAI,CAACM,EAAf;AAAmBC,kBAAAA,KAAK,EAAEL;AAA1B,iBAAf,CAVxB;;AAAA;AAUQM,gBAAAA,OAVR;AAYEd,gBAAAA,GAAG,CAACe,IAAJ,CAAS;AACPC,kBAAAA,MAAM,EAAE,IADD;AAEPV,kBAAAA,IAAI,EAAE;AACJ;AACAM,oBAAAA,EAAE,EAAEN,IAAI,CAACW,GAFL;AAGJC,oBAAAA,IAAI,EAAEZ,IAAI,CAACY,IAHP;AAIJhB,oBAAAA,KAAK,EAAEI,IAAI,CAACJ;AAJR,mBAFC;AAQPW,kBAAAA,KAAK,EAAEC,OAAO,CAACD;AARR,iBAAT;;AAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;kGAwBA,kBACoBd,GADpB,EACyBC,GADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEoBI,gBAFpB;AAAA,+BAGUL,GAAG,CAACE,IAAJ,CAASiB,IAHnB;AAAA,+BAIWnB,GAAG,CAACE,IAAJ,CAASC,KAJpB;AAAA;AAAA,uBAKoB,4BAAaH,GAAG,CAACE,IAAJ,CAASE,QAAtB,CALpB;;AAAA;AAAA;AAAA;AAGIe,kBAAAA,IAHJ;AAIIhB,kBAAAA,KAJJ;AAKIC,kBAAAA,QALJ;AAAA;AAEQgB,gBAAAA,KAFR;AAAA;AAAA,uBAQqBA,KAAK,CAACC,IAAN,EARrB;;AAAA;AAQQd,gBAAAA,IARR;AAUEN,gBAAAA,GAAG,CAACe,IAAJ,CAAS;AACPC,kBAAAA,MAAM,EAAE,IADD;AAEPV,kBAAAA,IAAI,EAAE;AACJ;AACAM,oBAAAA,EAAE,EAAEN,IAAI,CAACW,GAFL;AAGJC,oBAAAA,IAAI,EAAEZ,IAAI,CAACY,IAHP;AAIJhB,oBAAAA,KAAK,EAAEI,IAAI,CAACJ;AAJR;AAFC,iBAAT;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;oEAxBCmB,uC,6HAwBAA,uC;eAsBYvB,c","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport User from '../models/User';\nimport Session from '../models/Session';\nimport TryCatch from '../decorators/TryCatchMiddlewareDecorator';\nimport HttpError from '../exeptions/HttpError';\nimport { hashPassword, checkPassword } from '../helpers/password';\n\nclass AuthController {\n  @TryCatch\n  static async signin(req, res) {\n    const { email, password } = req.body;\n    const user = await User.findOne({ email });\n\n    if (!user || !(await checkPassword(password, user.password))) {\n      throw new HttpError('Incorrect login or password', 401);\n    }\n\n    const authToken = uuidv4();\n    const session = await Session.create({ userId: user.id, token: authToken });\n\n    res.json({\n      status: true,\n      user: {\n        // eslint-disable-next-line no-underscore-dangle\n        id: user._id,\n        name: user.name,\n        email: user.email,\n      },\n      token: session.token,\n    });\n  }\n\n  @TryCatch\n  static async signup(req, res) {\n    const model = new User({\n      name: req.body.name,\n      email: req.body.email,\n      password: await hashPassword(req.body.password),\n    });\n\n    const user = await model.save();\n\n    res.json({\n      status: true,\n      user: {\n        // eslint-disable-next-line no-underscore-dangle\n        id: user._id,\n        name: user.name,\n        email: user.email,\n      },\n    });\n  }\n}\n\nexport default AuthController;\n"],"file":"AuthController.js"}