{"version":3,"sources":["../../src/middleware/Authorize.js"],"names":["Authorize","req","res","next","headers","authorization","token","split","HttpError","Session","findOne","sessionFound","console","log","userId","TryCatch"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;IAEMA,S;;;;;;;;iGACJ,iBACmBC,GADnB,EACwBC,GADxB,EAC6BC,IAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEMF,GAAG,CAACG,OAAJ,CAAYC,aAFlB;AAAA;AAAA;AAAA;;AAGUC,gBAAAA,KAHV,GAGkBL,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAHlB;;AAAA,oBAKSD,KALT;AAAA;AAAA;AAAA;;AAAA,sBAMY,IAAIE,qBAAJ,CAAc,mCAAd,EAAmD,GAAnD,CANZ;;AAAA;AAAA;AAAA,uBAS+BC,oBAAQC,OAAR,CAAgB;AAAEJ,kBAAAA,KAAK,EAALA;AAAF,iBAAhB,CAT/B;;AAAA;AASUK,gBAAAA,YATV;AAUIC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;;AAVJ,oBAWSA,YAXT;AAAA;AAAA;AAAA;;AAAA,sBAYY,IAAIH,qBAAJ,CAAc,cAAd,EAA8B,GAA9B,CAZZ;;AAAA;AAeYM,gBAAAA,MAfZ,GAeuBH,YAfvB,CAeYG,MAfZ;AAiBIb,gBAAAA,GAAG,CAACa,MAAJ,GAAaA,MAAb;AAjBJ,iDAkBWX,IAAI,EAlBf;;AAAA;AAAA,sBAoBQ,IAAIK,qBAAJ,CAAc,cAAd,EAA8B,GAA9B,CApBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;mEAACO,uC;eAwBYf,S","sourcesContent":["import TryCatch from '../decorators/TryCatchMiddlewareDecorator';\nimport HttpError from '../exeptions/HttpError';\nimport Session from '../models/Session';\n\nclass Authorize {\n  @TryCatch\n  static async check(req, res, next) {\n    if (req.headers.authorization) {\n      const token = req.headers.authorization.split(' ')[1];\n\n      if (!token) {\n        throw new HttpError('Access token not found in request', 400);\n      }\n\n      const sessionFound = await Session.findOne({ token });\n      console.log(sessionFound);\n      if (!sessionFound) {\n        throw new HttpError('Unauthorized', 401);\n      }\n\n      const { userId } = sessionFound;\n\n      req.userId = userId;\n      return next();\n    }\n    throw new HttpError('Unauthorized', 401);\n  }\n}\n\nexport default Authorize;\n"],"file":"Authorize.js"}